---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  template:
    metadata:
      name: metrics-server
      labels:
        k8s-app: metrics-server
    spec:
      serviceAccountName: metrics-server
      volumes:
      # mount in tmp so we can safely use from-scratch images and/or read-only containers
      - name: tmp-dir
        emptyDir: {}
      - name: ca-ssl
        hostPath:
          path: /opt/kubernetes/ssl
      imagePullSecrets: 
      #secret to login private docker registry
      - name: registry-pull-secret
      containers:
      - name: metrics-server
        # image: k8s.gcr.io/metrics-server-amd64:v0.3.1
        image: registry.cn-beijing.aliyuncs.com/kube-systems/metrics-server:0.3.1
        imagePullPolicy: Always
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp
        - name: ca-ssl
          mountPath: /opt/kubernetes/ssl
        command:
        - /metrics-server
        - --logtostderr=true
        - --v=10
        # - --cert-dir=/opt/kubernetes/ssl/
        - --tls-cert-file=/opt/kubernetes/ssl/front-proxy-client.pem
        - --tls-private-key-file=/opt/kubernetes/ssl/front-proxy-client-key.pem
        - --kubelet-insecure-tls
        # - --kubelet-preferred-address-types=InternalIp
        # - --kubelet-preferred-address-types=[ExternalIP, Hostname,InternalDNS,InternalIP,ExternalDNS] \
        - --requestheader-client-ca-file=/opt/kubernetes/ssl/front-proxy-ca.pem
        # - --client-ca-file=/opt/kubernetes/ssl/ca.pem
        # - --proxy-client-cert-file=/opt/kubernetes/ssl/front-proxy-client.pem 
        # - --proxy-client-key-file=/opt/kubernetes/ssl/front-proxy-client-key.pem 
      restartPolicy: Always

